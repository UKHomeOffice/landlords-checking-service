---
kind: pipeline
name: default
type: kubernetes

environment:
  APP_NAME: lcs
  PROD_ENV: sas-lcs-prod
  BRANCH_ENV: sas-lcs-branch
  STG_ENV: sas-lcs-stg
  UAT_ENV: sas-lcs-uat
  PRODUCTION_URL: www.home-office-forms-demo.homeoffice.gov.uk
  IMAGE_URL: quay.io/ukhomeofficedigital
  IMAGE_REPO: lcs
  GIT_REPO: UKHomeOffice/landlords-checking-service
  HOF_CONFIG: hof-services-config/Landlords-Checking-Service
  NON_PROD_AVAILABILITY: Mon-Sun 08:00-23:00 Europe/London
  READY_FOR_TEST_DELAY: 20s

trigger:
  branch:
    - feature/*
    - master

linting: &linting
  pull: if-not-exists
  image: node:18
  environment:
    NOTIFY_KEY: USE_MOCK
  commands:
    - yarn run test:lint

unit_tests: &unit_tests
  pull: if-not-exists
  image: node:18
  environment:
    NOTIFY_KEY: USE_MOCK
  commands:
    - yarn run test:unit

acceptance_tests: &acceptance_tests
  pull: if-not-exists
  image: mcr.microsoft.com/playwright:v1.12.3-focal

sonar_scanner: &sonar_scanner
  pull: if-not-exists
  image: quay.io/ukhomeofficedigital/sonar-scanner-nodejs:latest
  commands:
    - sonar-scanner -Dproject.settings=./sonar-project.properties

steps:
  - name: clone_repos
    image: alpine/git
    environment:
      DRONE_GIT_USERNAME:
        from_secret: drone_git_username
      DRONE_GIT_TOKEN:
        from_secret: drone_git_token
    commands:
      - git clone https://$${DRONE_GIT_USERNAME}:$${DRONE_GIT_TOKEN}@github.com/UKHomeOfficeForms/hof-services-config.git
    when:
      branch:
        include:
        - master
        - feature/*
      event: [push, pull_request]

  - name: setup_deploy
    pull: if-not-exists
    image: node:18.12.0
    environment:
      NOTIFY_KEY: USE_MOCK
    commands:
      - yarn install --frozen-lockfile
      - yarn run postinstall
    when:
      branch:
        include:
        - master
      event: [push, pull_request]

  - name: linting_deploy
    <<: *linting
    when:
      branch:
        include:
          - master
      event: push

  - name: unit_tests_deploy
    <<: *unit_tests
    when:
      branch:
        include:
          - master
      event: push

  - name: build_image
    image: 340268328991.dkr.ecr.eu-west-2.amazonaws.com/acp/dind
    environment:
      DOCKER_PASSWORD:
        from_secret: DOCKER_PASSWORD
    commands:
      - n=0; while [ "$n" -lt 60 ] && [ ! docker stats --no-stream ]; do n=$(( n + 1 )); sleep 1; done
      - docker build --no-cache -t $${IMAGE_REPO}:$${DRONE_COMMIT_SHA} .
    volumes:
      - name: dockersock
        path: /var/run
    when:
      branch: master
      event: [push, pull_request]

  - name: image_to_quay
    pull: if-not-exists
    image: 340268328991.dkr.ecr.eu-west-2.amazonaws.com/acp/dind
    environment:
      DOCKER_PASSWORD:
        from_secret: DOCKER_PASSWORD
    commands:
    - docker login -u="ukhomeofficedigital+lcs" -p=$${DOCKER_PASSWORD} quay.io
    - docker tag $${IMAGE_REPO}:$${DRONE_COMMIT_SHA} $${IMAGE_URL}/$${IMAGE_REPO}:$${DRONE_COMMIT_SHA}
    - docker push $${IMAGE_URL}/$${IMAGE_REPO}:$${DRONE_COMMIT_SHA}
    when:
      branch: master
      event: [push, pull_request]
      
  # Trivy Security Scannner
  - name: scan-image
    pull: always
    image: 340268328991.dkr.ecr.eu-west-2.amazonaws.com/acp/trivy/client:latest
    resources:
      limits:
        cpu: 1000
        memory: 1024Mi
    environment:
      IMAGE_NAME: lcs:${DRONE_COMMIT_SHA}
      SEVERITY: MEDIUM,HIGH,CRITICAL
      FAIL_ON_DETECTION: false
      IGNORE_UNFIXED: true
      ALLOW_CVE_LIST_FILE: hof-services-config/Landlords-Checking-Service/trivy-cve-exceptions.txt
    when:
      event:
      - pull_request
      - push
      - tag

  # Deploy to pull request UAT environment
  - name: deploy_to_branch
    pull: if-not-exists
    image: quay.io/ukhomeofficedigital/kd:v1.14.0
    environment:
      # NOTIFY_STUB: stub
      KUBE_SERVER:
        from_secret: kube_server_dev
      KUBE_TOKEN:
        from_secret: kube_token_dev
    commands:
      - bin/deploy.sh $${BRANCH_ENV}
    when:
      branch: master
      event: pull_request

  - name: setup_branch
    pull: if-not-exists
    image: node:18
    environment:
      NOTIFY_KEY: USE_MOCK
    commands:
      - yarn install --frozen-lockfile
      - yarn run postinstall
    when:
      branch:
        include:
          - master
          - feature/*
      event: pull_request

  - name: linting_branch
    <<: *linting
    when:
      branch:
        include:
          - master
          - feature/*
      event: pull_request

  - name: unit_tests_branch
    <<: *unit_tests
    when:
      branch:
        include:
          - master
          - feature/*
      event: pull_request

  - name: acceptance_tests_branch
    <<: *acceptance_tests
    commands:
      - export ACCEPTANCE_HOST_NAME=https://$${APP_NAME}-$${DRONE_SOURCE_BRANCH}.$${BRANCH_ENV}.homeoffice.gov.uk
      - npx playwright install
      - npm run test:acceptance
    when:
      branch: master
      event: pull_request









































